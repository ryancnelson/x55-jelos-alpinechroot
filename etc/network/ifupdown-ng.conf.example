# This is an example configuration file for ifupdown-ng, which allows
# the system administrator to configure the behaviour of ifupdown-ng.
#
# The settings specified here are the defaults of ifupdown-ng.

# allow_addon_scripts:
# Enable support for /etc/if-X.d addon scripts.  These are used for
# compatibility with legacy setups, and may be disabled for performance
# improvements in setups where only ifupdown-ng executors are used.
# Valid values are 0 and 1, the default is 1.
allow_addon_scripts = 1

# allow_any_iface_as_template:
# Enable any interface to act as a template for another interface.
# This is presently the default, but is deprecated.  An admin may choose
# to disable this setting in order to require inheritance from specified
# templates.  Valid values are 0 and 1, the default is 1.
allow_any_iface_as_template = 1

# auto_executor_selection:
# Automatically determine which executors are needed to bring up an
# interface.  An admin may choose to disable this setting and explicitly
# define which executors to use with `use` statements.
# Valid values are 0 and 1, the default is 1.
auto_executor_selection = 1

# compat_create_interfaces:
# Denotes where or not to create interfaces when compat_* settings are
# active and it would be necessary to create an interface to be fully
# compliant.  This could happen when inheriting bridge VLAN settings to
# an interface within a bridges bridge-ports setting but no interface
# stanza is found.  Valid values are 0 and 1, the default is 1.
compat_create_interfaces = 1

# compat_ifupdown2_bridge_ports_inherit_vlans:
# In ifupdown2 <bridge-vids> as well as the <bridge-pvid> set on a bridge
# interface will be inherited by all member ports if not set explicitly.
# When set to 1 ifupdown-ng behaves the same way and will internally copy
# both options from the bridge member ports if they are not set on the
# member port. Valid values are 0 and 1, the default is 1.
compat_ifupdown2_bridge_ports_inherit_vlans = 1

# implicit_template_conversion:
# In some legacy configs, a template may be declared as an iface, and
# ifupdown-ng automatically converts those declarations to a proper
# template.  If this setting is disabled, inheritance will continue to
# work against non-template interfaces without converting them to a
# template.  Valid values are 0 and 1, the default is 1.
implicit_template_conversion = 1

# use_hostname_for_dhcp:
# Automatically learn the hostname property, used for DHCP configuration
# by querying the system hostname using uname(2).  This is basically
# equivalent to `hostname $(hostname)` without having to specify any
# configuration.  Valid values are 0 and 1, the default is 1.
use_hostname_for_dhcp = 1
